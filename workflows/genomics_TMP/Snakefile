# 15.12.20

rule get_paths:
    input:
        holopath=expand("{holopath}", holopath=config['holopath']),
        logpath=expand("{logpath}", logpath=config['logpath'])



################################################################################################################
##########################################       VARIANT CALLING     ###########################################
################################################################################################################



# BCFtools as variant caller

if config['var_caller'] == 'bcftools':

    ##
    # call variants with BCFtools
    ##
    rule bcf_run:
        input:
            "{projectpath}/GVC_00-InputBams/{group}"
            # BAMs_path=expand("{BAMs_path}", BAMs_path=config['BAMs_path'])
        output:
            directory("{projectpath}/GVC_01-CalledVar/{group}/per_chr")
        params:
            bam_dir="{projectpath}/GVC_00-InputBams/{group}"
            degr_mapp_qual=expand("{degr_mapp_qual}", degr_mapp_qual=config['degr_mapp_qual']),
            min_mapp_qual=expand("{min_mapp_qual}", min_mapp_qual=config['min_mapp_qual']),
            min_base_qual=expand("{min_base_qual}", min_base_qual=config['min_base_qual']),
            chr_region=expand("{chr_region}", chr_region=config['chr_region']),
            multicaller=expand("{multicaller}", multicaller=config['multicaller']),
            not_indels=expand("{not_indels}", not_indels=config['not_indels']),
            ref_genome=expand("{reference_genome}", reference_genome=config['reference_genome']),
            group="{group}",
            threads=expand("{threads}", threads=config['threads'])
        shell:


# GATK as variant caller

if config['var_caller'] == 'gatk':

    ##
    # run GATK per sample and chromosome
    ##
    rule get_samples:
        input:
            "{projectpath}/GVC_00-InputBams/{group}"
            # BAMs_path=expand("{BAMs_path}", BAMs_path=config['BAMs_path'])
        output:
            directory("{projectpath}/GVC_01-CalledVar/{group}/individual_samples")
        params:
            min_prunning=expand("{min_prunning}", min_prunning=config['min_prunning']),
            min_dangling=expand("{min_dangling}", min_dangling=config['min_dangling']),
            ref_genome=expand("{reference_genome}", reference_genome=config['reference_genome']),
            group="{group}",
            threads=expand("{threads}", threads=config['threads'])
        shell:


    ##
    # run GATK per chromosome on all group
    ##
    rule get_group:
        input:
            my_db="{projectpath}/GVC_01-CalledVar/{group}/individual_samples"
        output:
            directory("{projectpath}/GVC_01-CalledVar/{group}/per_chr")
        params:
            group="{group}",
            ref_genome=expand("{reference_genome}", reference_genome=config['reference_genome']),
            threads=expand("{threads}", threads=config['threads'])
        shell:



# ANGSD as variant caller

if config['var_caller'] == 'angsd': ### AND LOW DEPTH 

    ##
    # call variants with ANGSD
    ##
    rule angsd_run:
        input:
            "{projectpath}/GVC_00-InputBams/{group}"
            # BAMs_path=expand("{BAMs_path}", BAMs_path=config['BAMs_path'])
        output:
            directory("{projectpath}/GVC_01-CalledVar/{group}/per_chr")
        params:
            model=expand("{model}", model=config['model']),
            output_logL=expand("{output_logL}", output_logL=config['output_logL']),
            major_minor=expand("{major_minor}", major_minor=config['major_minor']),
            ref_genome=expand("{reference_genome}", reference_genome=config['reference_genome']),
            group="{group}",
            threads=expand("{threads}", threads=config['threads'])
        shell:



### Conditional HD

    ### - PHASING



### Conditional LD
#Reference panel in config has to be defined

    ### - LIKELIHOOD UPDATE


    ### - IMPUTATION
